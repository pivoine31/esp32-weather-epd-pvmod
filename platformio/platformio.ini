; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = dfrobot_firebeetle2_esp32e
; default_envs = firebeetle32

; default options for each '[env:**]'
[env]
platform = espressif32 @ 6.9.0
;platform_packages = platformio/framework-arduinoespressif32@^3.20017.0
framework = arduino
build_flags = '-Wall' '-std=gnu++17'
lib_deps =
  adafruit/Adafruit BME280 Library @ ^2.2.4
  adafruit/Adafruit BusIO @ ^1.16.2
  adafruit/Adafruit Unified Sensor @ ^1.1.14
  bblanchon/ArduinoJson @ ^7.3.0
  zinggjm/GxEPD2 @ ^1.6.1
  ESP32Async/AsyncTCP @ 3.3.2
  ESP32Async/ESPAsyncWebServer @ 3.6.1

; Uncomment and update last 4 lines for uploading using OTA
; (beware: no space before keywords, but spaces before additional lines)
; need to indicate in _port either the IP address or the mDNS name
; (e.g Weather32.local - network name indicated by HNAME)
; OTA password is indicated by SOFTAP_PWD
; upload_protocol = espota
; upload_port = 192.168.1.93
; upload_flags =
;  --auth=Weather.32

[env:dfrobot_firebeetle2_esp32e]
board = dfrobot_firebeetle2_esp32e
monitor_speed = 115200
; override default partition table
; https://github.com/espressif/arduino-esp32/tree/master/tools/partitions
; OTA requires two app partitions ; hence use min_spiffs instead of huge_app
; board_build.partitions = huge_app.csv
board_build.partitions = min_spiffs.csv
; change MCU frequency, 240MHz -> 80MHz (for better power efficiency)
board_build.f_cpu = 80000000L

[env:firebeetle32]
board = firebeetle32
monitor_speed = 115200
; override default partition table
; https://github.com/espressif/arduino-esp32/tree/master/tools/partitions
; OTA requires two app partitions ; hence use min_spiffs instead of huge_app
; board_build.partitions = huge_app.csv
board_build.partitions = min_spiffs.csv
; change MCU frequency, 240MHz -> 80MHz (for better power efficiency)
board_build.f_cpu = 80000000L
